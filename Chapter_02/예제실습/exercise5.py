# 리스트 자료형
# 리스트명 = [요소1. 요소2, 요소3, ...]

odd = [1,3,5,7,9]
print(odd)

# 여러가지 리스트
a = []
b = [1,2,3]
c = ['Life', 'is', 'too', 'short']
d = [1,2, 'Life', 'is']
e = [1,2, ['Life', 'is']]

print(a)
print(b)
print(c)
print(d)
print(e)

# 리스트의 인덱싱과 슬라이싱
# 리스트도 문자열처럼 인덱싱과 슬라이싱이 가능하다

# 리스트 인덱싱
a = [1,2,3]
print(a)

# a[0]은 리스트 a의 첫번째 요소 값을 말한다
print(a[0])
print(a[0] + a[2]) # 1+3

# 파이썬은 숫자를 0부터 세기때문에 a[1]이 리스트 a의 첫번째 요소가 아니라
# a[0]이 리스트 a의 첫번째 요소임을 명심하자.
# a[-1]은 문자열에서와 마찬가지로 리스트 a의 마지막 요소값을 말한다.
print(a[-1])

# 리스트 a 안에 숫자 1,2,3 과 또 다른 리스트인 ['a','b','c']를 포함시켜보자.
a = [1,2,3,['a','b','c']]

print(a)
print(a[0])
print(a[-1])
print(a[3])

# 리스트 a에 포함된 ['a','b','c']라는 리스트에서 'a'라는 값을 인덱싱을
# 이용하여 끄집어내기
a[-1][0]
print(a[-1][0])
print(a[-1][1])
print(a[-1][2])

# 삼중 리스트에서 인덱싱하기
a = [1, 2, ['a', 'b', ['Life', 'is']]]
print(a)
print(a[2][2][0])

# 리스트의 슬라이싱 : 문자열과 마찬가지로 리스트에서도 슬라이싱 기법을 적용할 수 있다.
# 슬라이싱은 '나눈다'는 뜻이다.
a = [1,2,3,4,5]
a[0:2]
print(a[0:2])

# 비교 : 문자열에서의 슬라이싱
a = "12345"
print(a[0:2])

a = [1, 2, 3, 4, 5]
b = a[:2]   # 처음부터 a[1]까지
c = a[2:]   # a[2]부터 마지막까지
print(a[2])
print(b)
print(c)

# 중첩된 리스트에서 슬라이싱하기
a = [1,2,3,['a','b','c'],4,5]
a[2:5]  # a[2]부터 a[4]까지
print(a[2:5])
a[3][:2]
print(a[3][:2])


# 리스트 연산자
# 리스트 역시 + 기호를 이용해서 더할 수 있고 * 기호를 이용해서 반복할 수 있다
a = [1,2,3]
b = [4,5,6]
print(a+b)